apply plugin: 'com.android.application'

android {
    namespace "com.yourcompany.greentap"
    compileSdk rootProject.ext.compileSdkVersion
	
	defaultConfig {
		applicationId "com.mchisty.greentap"  // Must match Play Console package name
		minSdkVersion rootProject.ext.minSdkVersion
		targetSdkVersion rootProject.ext.targetSdkVersion
		versionCode 2
		versionName "1.0.1"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}	
	

    signingConfigs {
        release {
            if (project.hasProperty('GREENTAP_UPLOAD_STORE_FILE')) {
                storeFile file(GREENTAP_UPLOAD_STORE_FILE)
                storePassword GREENTAP_UPLOAD_STORE_PASSWORD
                keyAlias GREENTAP_UPLOAD_KEY_ALIAS
                keyPassword GREENTAP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }	
	
	
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
